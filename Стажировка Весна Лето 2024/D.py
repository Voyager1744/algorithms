"""
D. Игра-платформер
Ограничение времени	1 секунда
Ограничение памяти	256.0 Мб
Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt
Вы разрабатываете игру-платформер. Игровое поле может быть представлено как бесконечная клетчатая полоска, каждая клетка которой занумерована целым числом как на картинке ниже. Изначально игрок находится в позиции
0
0 и смотрит вправо.

Текст описания

На вход вашей программе подается последовательность команд — движения игрока. Они могут быть трех типов:

Текст описания

При этом разрешается несколько раз выполнять один и тот же поворот, например, «LL». После такой последовательности команд игрок будет смотреть влево.

Вы нашли уязвимость в игре и получили последовательность действий вашего друга. Вам известно, что перехваченная вами последовательность отличается от настоящей ровно в одном символе. Найдите все позиции, в которых мог на самом деле оказаться ваш друг после выполнения всех действий.

Формат ввода
В первой строке ввода находится единственное целое число
N
N (
1
≤
N
≤
3
⋅
1
0
5
1≤N≤3⋅10
5
 ) — количество команд.

Во второй строке находятся
N
N символов — сами команды. Гарантируется, что все символы принадлежат множеству {«F»,«R»,«L»}.

Формат вывода
Выведите единственное число — количество различных позиций, на которых мог оказаться игрок после выполнения всех действий.


"""


def generate_variations(n, commands):
    for i in range(n):
        if commands[i] == 'F':
            yield commands[:i] + 'R' + commands[i + 1:]
            yield commands[:i] + 'L' + commands[i + 1:]
        elif commands[i] == 'R':
            yield commands[:i] + 'F' + commands[i + 1:]
            yield commands[:i] + 'L' + commands[i + 1:]
        elif commands[i] == 'L':
            yield commands[:i] + 'F' + commands[i + 1:]
            yield commands[:i] + 'R' + commands[i + 1:]

N = int(input())
positions_count = 0
pos = set()

for variation in generate_variations(N, input()):
    x = 0
    direction = 1

    for command in variation:
        if command == 'F':
            x += direction
        elif command == 'R':
            if direction == -1:
                direction = 1
        elif command == 'L':
            if direction == 1:
                direction = -1

    if x not in pos:
        pos.add(x)
        positions_count += 1

print(positions_count)
